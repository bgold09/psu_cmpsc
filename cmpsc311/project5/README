CMPSC 311, Spring 2012, Project 5 

Author:   Brian Golden
Email:    bwg5079@psu.edu


This project represents a program "hake" that mimics part of the functionality of the UNIX system tool "make."
Specifically, this project implements macro expansion according to make. 

'hake' accepts three option, '-h', '-v' and '-f'
  # '-h' prints usage information for hake
  # '-v' turns on certain messages that tell the user about various program functionality
    ## the user can supply up to three '-v' options to turn on more messages
  # 'f' accepts a single argument that specifies a hakefile
    ## multiple '-f' option can be supplied
    ## supplying "-" as the argument is interpreted as "read from stdin"

When at least one verbose mode flag is supplied, hake will print out each line of the makefiles being read
  and an analysis of each.
A line can be diagnosed as a comment, macro, target-prerequisite line, recipe, include or empty line.
When an include statement is reached, hake will try to analyze the contents of the file
  if it can open it or the file has not already been read.

As mentioned above, the program also performs macro expansion according to the make format rules. 
For instance, if a macro is declared as:
    "SRC = file-1" 
  and a line after it appears as:
    "target: ${SRC}
  the latter would be expanded and the resulting line would be read as:
    "target: file-1"

I thought that this functionality presented some interesting challenges in dealing with strings,
  and the starting solution from project 04 presented some useful ways of using buffers to perform
  various types of text replacement. 
